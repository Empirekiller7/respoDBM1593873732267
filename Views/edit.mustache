<html>
<head>
    <title>{{title}}</title>
    <link rel="stylesheet" type="text/css" href="../../../css/main.css">
    <link rel="stylesheet" href="../../../css/bootstrap.min.css" />
    <link rel="icon" type="image/png" href="../../../images/favicon.png" />       
    <!--TODO CHANGE JQUERY TO LOCAL-->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="../../../js/bootstrap.min.js"></script>  
    <script>
    $( document ).ready(function() {
             {{#properties}} 
              let {{name}}Type = $('#{{name}}').attr('type');
                 if({{name}}Type == 'checkbox')
                 {
                     let val = '{{value}}';
                     if(val == 1){
                       $('#{{name}}').prop('checked', true);
                       }
                       
                 }else {
                
                     $('#{{name}}').val('{{value}}');
                  }                  
             {{/properties}} 

        $("#insertFormBtn").click(function(event) {
            {{#references}}
                let {{model}}_Array = [];
                    if({{isManyToMany}}){
                    
                        $("#{{model}} input:checkbox:checked").each(function(index){
                            {{model}}_Array.push(parseInt($( this ).val()));
                        });
                        console.log({{model}}_Array);
                    }
                      
            {{/references}} 
            event.preventDefault();
            $.ajax({
                url: '/api/{{classValue}}/{{idValue}}',
                type: 'PUT',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    {{#properties}}
                    {{name}}: document.getElementById('{{name}}').type =='checkbox'? document.getElementById('{{name}}').checked : 
                                    $('#{{name}}').val() {{#needsComma}},{{/needsComma}}
                    {{/properties}}

                    {{#references}}
                    {{atrName}}: {{isManyToMany}} === false ? $('#{{model}}').val(): {{model}}_Array
                      ,
                    {{/references}} 
                }),
                dataType: 'json',
                success: function (data) {
                    window.location.href = "/backoffice/{{title}}"; 
                },
                error: function(error){
                console.log(error);
                }
            });
        });
    });
    </script>
    <script>
    {{#hasReferences}}
    function loadValues(model, label, controlId, isManyToMany){
        var xhr = new XMLHttpRequest();
        xhr.open("GET", `../../../${model}`, true);
        xhr.onreadystatechange = function () {
            if(xhr.readyState === 4 && xhr.status === 200) {
                var control = document.getElementById(controlId);
                var response = JSON.parse(this.responseText);
                console.log(response)
            
                if(isManyToMany){
                    $.ajax({
                        url: '/api/'+model+'/{{classValue}}/{{idValue}}',
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            console.log(data) 
                        },
                        error: function(error){
                            console.log(error);
                        }
                    }).done(function (data){
                        var checkBoxDiv = document.createElement("div"); 
                        checkBoxDiv.id = model;

                        response.forEach(elem =>{
                        var checkBoxWrapper =  document.createElement("div");       
                        var checkBox = document.createElement("input"); 
                        checkBox.type = 'checkbox';
                        checkBox.value = elem.id;
                        checkBox.name = model +"_"+ elem.id;
                        //check if it exists in data for M-M relations
                        console.log("data: "+ data[0] + " id: "+elem.id);
                        let localData = data.filter(function(elems){ 
                            return elems.id == elem.id;
                            });

                        if(localData.length > 0)
                            checkBox.checked = true;

                        var checkBoxLabel =  document.createElement("label");       
                        checkBoxLabel.setAttribute("for", checkBox.name);
                        checkBoxLabel.textContent = elem[label];
                        checkBoxDiv.appendChild(checkBox); 
                        checkBoxDiv.appendChild(checkBoxLabel);              
                        })
                        control.appendChild(checkBoxDiv);   
                    });
                  
                 }else{
                    //function to create select/options
    
                    var select_model = document.createElement("select"); 
                    select_model.name = model + '_select';
                    select_model.id = model;
                    response.forEach(elem =>{
                        var option = document.createElement("option");
                        option.text = elem[label];
                        option.value = elem.id;
                        select_model.add(option);
                        control.appendChild(select_model);      
                    })
                  
                }
            }
        }
                    xhr.send();             
    }   

     window.onload = function() {   
        {{#references}}
        loadValues('{{model}}','{{labelRef}}','div{{model}}value', {{isManyToMany}});
        {{/references}}             
    }             
    {{/hasReferences}}        
    </script> 
</head>         
    <body>
    <div class="row">
    {{ >menu }} 
    <div class="col-md-{{content}} card-detail d-flex align-content-center" style="margin: 7px;">
        <div class="row" style="width: 60%; margin: 0 auto;">
        <div class="col-md-12">
        <a href="/backoffice/{{title}}" class="btn btn-primary" id="backBottom">Back</a>
        <h4> Edit {{title}} </h4>
        </div> 
        <div class="col-md-12">  
        <div class="card-deck">
        <div class="card">
        <div class="card-body" style="padding: 2vh 0 0 4vh;">          
    <form>         
        {{#properties}}         
            <div class="form-group">               
            <label class="labels-column">{{name}}:</label>             
            <input type={{type}} name="{{name}}" id="{{name}}" class="form-control" style="width:90%;" {{#constraints}} {{name}}="{{value}}" {{/constraints}} {{#required}}required="true"{{/required}}></input>         
            </div>         
        {{/properties}}
        {{#references}}
            <div class="form-group">   
            <label class="labels-column">{{model}}:</label>
            <div id="div{{model}}value"></div>
            </div>
        {{/references}} 
            <div class="d-flex justify-content-center"> 
                <button id="insertFormBtn" class="btn btn-outline-primary" type="submit">Save</button> 
            </div>          
    </form>
     </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>         
    </body> 
</html>